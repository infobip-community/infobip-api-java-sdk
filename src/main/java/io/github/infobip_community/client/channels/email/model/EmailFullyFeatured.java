
package io.github.infobip_community.client.channels.email.model;

import io.github.infobip_community.client.channels.common.NotifyContentType;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import java.io.File;
import java.time.OffsetDateTime;

import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.ToString;
import org.hibernate.validator.constraints.URL;

@Getter
@EqualsAndHashCode
@ToString
public final class EmailFullyFeatured {
    @NotBlank
    @Email
    private final String from;
    @NotBlank
    @Email
    private final String to;
    @Email
    private String cc;
    @Email
    private String bcc;
    @NotBlank
    private final String subject;
    private String text;
    private String bulkId;
    private String messageId;
    private Integer templateid;
    private File attachment;
    private File inlineImage;
    private String html;
    @Email
    private String replyto;
    private String defaultplaceholders;
    private boolean preserverecipients;
    @URL
    private String trackingUrl;
    private boolean trackclicks;
    private boolean trackopens;
    private boolean track;
    private String callbackData;
    private boolean intermediateReport;
    @URL
    private String notifyUrl;
    private NotifyContentType notifyContentType;
    private OffsetDateTime sendAt;
    private String landingPagePlaceholders;
    private String landingPageId;

    /**
     * <p>
     * EmailFullyFeatured.
     * </p>
     *
     * @param from Email address with optional sender name.
     * @param to Email address of the recipient.
     * @param subject Message subject.
     */
    public EmailFullyFeatured(String from, String to, String subject) {
        this.from = from;
        this.to = to;
        this.subject = subject;
    }

    /**
     * CC recipient email address.
     */
    public EmailFullyFeatured cc(String cc) {
        this.cc = cc;
        return this;
    }

    /**
     * BCC recipient email address.
     */
    public EmailFullyFeatured bcc(String bcc) {
        this.bcc = bcc;
        return this;
    }

    /**
     * Body of message.
     */
    public EmailFullyFeatured text(String text) {
        this.text = text;
        return this;
    }

    /**
     * The ID uniquely identifies the sent Email request. This filter will enable
     * you to query delivery reports for all the messages using just one request.
     * You will receive a bulkId in the response after sending an Email request. If
     * you don't set your own bulkId, unique ID will be generated by our system and
     * returned in the API response. (Optional Field)
     */
    public EmailFullyFeatured bulkId(String bulkId) {
        this.bulkId = bulkId;
        return this;
    }

    /**
     * The ID that uniquely identifies the message sent for a recipient. (Optional
     * Field)
     */
    public EmailFullyFeatured messageId(String messageId) {
        this.messageId = messageId;
        return this;
    }

    /**
     * Template identifier based on which the email message is generated. The
     * template is created over Infobip web interface. If templateId is present then
     * html and text values are ignored.
     *
     * NOTE : This field supports value of broadcast templateId only. Content
     * templateId is not supported.
     */
    public EmailFullyFeatured templateid(Integer templateid) {
        this.templateid = templateid;
        return this;
    }

    /**
     * File attachment.
     */
    public EmailFullyFeatured attachment(File attachment) {
        this.attachment = attachment;
        return this;
    }

    /**
     * Using an inline image, it is possible to insert the image file inside the
     * HTML code of the email by using cid:FILENAME instead of providing any
     * external link to image.
     */
    public EmailFullyFeatured inlineImage(File inlineImage) {
        this.inlineImage = inlineImage;
        return this;
    }

    /**
     * HTML body of the message. If HTML and text fields are present, text field
     * will be ignored and HTML will be delivered as message body.
     */
    public EmailFullyFeatured html(String html) {
        this.html = html;
        return this;
    }

    /**
     * Email address to which recipients of the email can reply.
     */
    public EmailFullyFeatured replyto(String replyto) {
        this.replyto = replyto;
        return this;
    }

    /**
     * Default placeholder values used for all recipients. The values are used to
     * generate the email message.
     */
    public EmailFullyFeatured defaultplaceholders(String defaultplaceholders) {
        this.defaultplaceholders = defaultplaceholders;
        return this;
    }

    /**
     * This parameter enables preserving To recipients for an email when value is
     * true, default value is false for this parameter.
     */
    public EmailFullyFeatured preserverecipients(boolean preserverecipients) {
        this.preserverecipients = preserverecipients;
        return this;
    }

    /**
     * The URL on your callback server on which the open and click notifications
     * will be sent. If you are passing this parameter then track=true will be
     * assigned, you don't need to pass track=true separately. See the section
     * "Tracking Notifications" below for details.
     */
    public EmailFullyFeatured trackingUrl(String trackingUrl) {
        this.trackingUrl = trackingUrl;
        return this;
    }

    /**
     * This parameter enables or disables track click feature.
     */
    public EmailFullyFeatured trackclicks(boolean trackclicks) {
        this.trackclicks = trackclicks;
        return this;
    }

    /**
     * This parameter enables or disables track open feature.
     */
    public EmailFullyFeatured trackopens(boolean trackopens) {
        this.trackopens = trackopens;
        return this;
    }

    /**
     * Enable or disable open and click tracking.Default value is true. Passing true
     * will only enable tracking and the statistics would be visible in web
     * interface alone. This can be explicitly overridden by trackopens and
     * trackclikcs.
     */
    public EmailFullyFeatured track(boolean track) {
        this.track = track;
        return this;
    }

    /**
     * Additional client data that will be sent on the notifyUrl. The maximum value
     * is 4000 characters.
     */
    public EmailFullyFeatured callbackData(String callbackData) {
        this.callbackData = callbackData;
        return this;
    }

    /**
     * The real-time Intermediate delivery report that will be sent on your callback
     * server.
     */
    public EmailFullyFeatured intermediateReport(boolean intermediateReport) {
        this.intermediateReport = intermediateReport;
        return this;
    }

    /**
     * The URL on your callback server on which the Delivery report will be sent.
     */
    public EmailFullyFeatured notifyUrl(String notifyUrl) {
        this.notifyUrl = notifyUrl;
        return this;
    }

    /**
     * Preferred Delivery report content type. Can be application/json or
     * application/xml.
     */
    public EmailFullyFeatured notifyContentType(NotifyContentType notifyContentType) {
        this.notifyContentType = notifyContentType;
        return this;
    }

    /**
     * To schedule message at a given time in future. Time provided should be in UTC
     * in following format: yyyy-MM-dd'T'HH:mm:ss.SSSXXX.
     */
    public EmailFullyFeatured sendAt(OffsetDateTime sendAt) {
        this.sendAt = sendAt;
        return this;
    }

    /**
     * Personalize opt out landing page by inserting placeholders. Insert
     * placeholder or tag while designing landing page.
     */
    public EmailFullyFeatured landingPagePlaceholders(String landingPagePlaceholders) {
        this.landingPagePlaceholders = landingPagePlaceholders;
        return this;
    }

    /**
     * Opt out landing page which will be used and displayed once end user clicks
     * unsubscribe link. If not present default opt out landing page will be
     * displayed. Create landing page on IBâ€™s portal and use last 6 digits from URL
     * to use that opt out page.
     */
    public EmailFullyFeatured landingPageId(String landingPageId) {
        this.landingPageId = landingPageId;
        return this;
    }
}
